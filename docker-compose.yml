version: '3'
services:
  app:
    container_name: crud_api
    build: .
    ports: 
      - 8080:8080 
    restart: on-failure
    volumes:
      - api:/usr/src/app/
    depends_on:
      - docker-postgres          
    networks:
      - network1


  docker-postgres:
    image: postgres:latest
    container_name: full_db_postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=user123
      - POSTGRES_DB=datb1
      - DATABASE_HOST=docker-postgres 
    ports:
      - '5432:5432'
    volumes:
      - database_postgres:/var/lib/postgresql/data
    networks:
      - network1

  # rabbit-mq:
  #   image: rabbitmq:3-management-alpine
  #   container_name: rabbitmq
  #   volumes:
  #     # - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
  #     # - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
  #     - rabbitmq/:/var/log/rabbitmq/    
       
  #   environment:
  #     # - RABBITMQ_ERLANG_COOKIE=
  #     - RABBITMQ_DEFAULT_USER=guest
  #     - RABBITMQ_DEFAULT_PASS=guest
  #   ports:
  #    - 5672:5672
  #    - 15672:15672    
  #   networks:
  #    - network1


#   pgadmin:
#     image: dpage/pgadmin4
#     container_name: pgadmin_container
#     environment:
#       PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
#       PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
#     depends_on:
#       - fullstack-postgres
#     ports:
#       - "5050:80"
#     networks:
#       - fullstack
#     restart: unless-stopped

volumes:
  api:
  database_postgres: 
  # rabbitmq:                 

# Networks  to facilitate communication between containers
networks:
  network1:
    driver: bridge